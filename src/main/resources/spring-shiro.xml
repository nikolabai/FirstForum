<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="
	   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	
	<!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="1"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>
	
	
	<!-- 1、項目自定义的Realm -->
    <bean id="myRealm" class="cn.gavin.shiro.realm.UserRealm" ></bean>
    
    <!-- 2、添加securityManager定义  -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager"> 
	    <!--单个realm使用realm,如果有多个realm，使用realms属性代替--> 
	    <property name="realm" ref="myRealm" /> 
	    <!-- 使用下面配置的缓存管理器 -->  
	    <!-- <property name="cacheManager" ref="cacheManager" />  
	    <property name="sessionManager" ref="sessionManager" />  --> 
	    <property name="rememberMeManager" ref="rememberMeManager" /> 
	</bean>
    
	
    <!-- 3、Shiro Filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    	<!-- Shiro的核心安全接口,这个属性是必须的 -->
        <property name="securityManager" ref="securityManager" />
        <!-- 要求登录时的链接,非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->  
        <property name="loginUrl" value="/" />
        
        <property name="successUrl" value="/js/success" />
        <!-- 用户访问无权限的链接时跳转此页面  -->
        <property name="unauthorizedUrl" value="/js/failure" />
        <!-- 过滤链定义 -->  
        <property name="filterChainDefinitions">
            <value>
            <!-- 对静态资源设置匿名访问 -->
                /images/** = anon
                /js/** = anon
                /css/** = anon
                
                <!-- Shiro 过滤链的定义-->   
                <!-- 
                anno代表不需要授权即可访问，对于静态资源，访问权限都设置为anno
				authc表示需要登录才可访问
                    Anon：不指定过滤器 
                    Authc:验证，这些页面必须验证后才能访问，也就是我们说的登录后才能访问。-->
                    <!--下面value值的第一个&#39;/&#39;代表的路径是相对于HttpServletRequest.getContextPath()的值来的 -->   
                    <!--anon：它对应的过滤器里面是空的,什么都没做,这里.do和.jsp后面的*表示参数,比方说login.jsp?main这种 -->   
                <!--authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter-->   
                 
	            /login.jsp  = anon
	            /register.jsp = anon
	            /shiroLogin.jsp = anon
	            /index.jsp = anon
            
            /validateCode = anon
            <!-- 需要登陆的才能进入的url    /** = authc   所有url都需要授权 -->
            <!-- /shiroLoginin = authc -->
            </value>
        </property>
    </bean>
    
    <!-- ？？？ -->
    <!-- 4、保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" /> 
    
    
    <!-- remenberMe配置 -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
       <constructor-arg value="rememberMe" />
       <property name="httpOnly" value="true" />
       <!-- 默认记住7天（单位：秒） -->
       <property name="maxAge" value="604800" />
    </bean>
    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
       <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
       <property name="cookie" ref="rememberMeCookie" />
    </bean>
</beans>